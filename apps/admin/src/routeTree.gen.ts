/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const UserChangePasswordLazyImport = createFileRoute('/user/change-password')()
const DashboardRequestsIndexLazyImport = createFileRoute(
  '/dashboard/requests/',
)()
const DashboardManageUsersIndexLazyImport = createFileRoute(
  '/dashboard/manage-users/',
)()
const DashboardManageClientsIndexLazyImport = createFileRoute(
  '/dashboard/manage-clients/',
)()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)

const UserChangePasswordLazyRoute = UserChangePasswordLazyImport.update({
  path: '/user/change-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user/change-password.lazy').then((d) => d.Route),
)

const DashboardRequestsIndexLazyRoute = DashboardRequestsIndexLazyImport.update(
  {
    path: '/dashboard/requests/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/dashboard/requests/index.lazy').then((d) => d.Route),
)

const DashboardManageUsersIndexLazyRoute =
  DashboardManageUsersIndexLazyImport.update({
    path: '/dashboard/manage-users/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/manage-users/index.lazy').then((d) => d.Route),
  )

const DashboardManageClientsIndexLazyRoute =
  DashboardManageClientsIndexLazyImport.update({
    path: '/dashboard/manage-clients/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/manage-clients/index.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/change-password': {
      preLoaderRoute: typeof UserChangePasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/manage-clients/': {
      preLoaderRoute: typeof DashboardManageClientsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/manage-users/': {
      preLoaderRoute: typeof DashboardManageUsersIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/requests/': {
      preLoaderRoute: typeof DashboardRequestsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  UserChangePasswordLazyRoute,
  DashboardIndexLazyRoute,
  DashboardManageClientsIndexLazyRoute,
  DashboardManageUsersIndexLazyRoute,
  DashboardRequestsIndexLazyRoute,
])

/* prettier-ignore-end */
