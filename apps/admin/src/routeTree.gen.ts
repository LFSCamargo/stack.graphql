/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const UserChangePasswordLazyImport = createFileRoute('/user/change-password')()
const DashboardManageClientsIndexLazyImport = createFileRoute(
  '/dashboard/manage-clients/',
)()
const DashboardManageClientsAddIndexLazyImport = createFileRoute(
  '/dashboard/manage-clients/add/',
)()
const DashboardManageClientsDetailsCardUserIdLazyImport = createFileRoute(
  '/dashboard/manage-clients/details/$cardUserId',
)()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)

const UserChangePasswordLazyRoute = UserChangePasswordLazyImport.update({
  path: '/user/change-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user/change-password.lazy').then((d) => d.Route),
)

const DashboardManageClientsIndexLazyRoute =
  DashboardManageClientsIndexLazyImport.update({
    path: '/dashboard/manage-clients/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/manage-clients/index.lazy').then((d) => d.Route),
  )

const DashboardManageClientsAddIndexLazyRoute =
  DashboardManageClientsAddIndexLazyImport.update({
    path: '/dashboard/manage-clients/add/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/manage-clients/add/index.lazy').then(
      (d) => d.Route,
    ),
  )

const DashboardManageClientsDetailsCardUserIdLazyRoute =
  DashboardManageClientsDetailsCardUserIdLazyImport.update({
    path: '/dashboard/manage-clients/details/$cardUserId',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/dashboard/manage-clients/details/$cardUserId.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/change-password': {
      id: '/user/change-password'
      path: '/user/change-password'
      fullPath: '/user/change-password'
      preLoaderRoute: typeof UserChangePasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/manage-clients/': {
      id: '/dashboard/manage-clients/'
      path: '/dashboard/manage-clients'
      fullPath: '/dashboard/manage-clients'
      preLoaderRoute: typeof DashboardManageClientsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/manage-clients/details/$cardUserId': {
      id: '/dashboard/manage-clients/details/$cardUserId'
      path: '/dashboard/manage-clients/details/$cardUserId'
      fullPath: '/dashboard/manage-clients/details/$cardUserId'
      preLoaderRoute: typeof DashboardManageClientsDetailsCardUserIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/manage-clients/add/': {
      id: '/dashboard/manage-clients/add/'
      path: '/dashboard/manage-clients/add'
      fullPath: '/dashboard/manage-clients/add'
      preLoaderRoute: typeof DashboardManageClientsAddIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  UserChangePasswordLazyRoute,
  DashboardIndexLazyRoute,
  DashboardManageClientsIndexLazyRoute,
  DashboardManageClientsDetailsCardUserIdLazyRoute,
  DashboardManageClientsAddIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/user/change-password",
        "/dashboard/",
        "/dashboard/manage-clients/",
        "/dashboard/manage-clients/details/$cardUserId",
        "/dashboard/manage-clients/add/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/user/change-password": {
      "filePath": "user/change-password.lazy.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.lazy.tsx"
    },
    "/dashboard/manage-clients/": {
      "filePath": "dashboard/manage-clients/index.lazy.tsx"
    },
    "/dashboard/manage-clients/details/$cardUserId": {
      "filePath": "dashboard/manage-clients/details/$cardUserId.lazy.tsx"
    },
    "/dashboard/manage-clients/add/": {
      "filePath": "dashboard/manage-clients/add/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
